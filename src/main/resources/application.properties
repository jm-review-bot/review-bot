server.port=5560

## Bot
bot.operations_interval=1000
bot.expired_review_check_time=0 0 4 * * *
bot.review_reminder_interval=60000
bot.clear_cache=0 0 3 * * *
bot.minutes_remainder_reviewers=0
bot.minutes_remainder_students_reviewers=60

# Батчинг (пакетная обработка).
# Пакетная обработка позволяет нам отправлять группу операторов SQL в
# базу данных за один вызов. Таким образом, мы можем оптимизировать
# использование сети и памяти нашего приложения. Без батчинга Hibernate
# сохраняет сущности по одной.
# !!! Если наши объекты используют генератор идентификаторов
# GenerationType.IDENTITY, Hibernate автоматически отключит
# пакетные сохранения / обновления. Поэтому у сущностей должен
# быть @GeneratedValue(strategy = GenerationType.SEQUENCE) !!!
# Укажем Hibernate, чтобы накапливал в persistence context, например,
# 5 сущностей и сохранял их одним пакетом в ходе одного обращения к БД:
spring.jpa.properties.hibernate.jdbc.batch_size=5
# Пакетное сохранение для нескольких разных сущностей:
spring.jpa.properties.hibernate.order_inserts=true
# Активация батчинга для внесения изменений в сущности:
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.batch_versioned_data=true

## LOGGING
spring.profiles.active=DEV

# REVIEW RULES

# время ревью в минутах (на 1 минуту меньше часа для корректной работы программы)
review.duration=59
# период времени в минутах до начала ревью позже которого нельзя объявить о ревью (на 1 минуту меньше часа для корректной работы программы)
review.time_limit.before_starting_review=59
# период времени в минутах до начала ревью позже которого его нельзя добавить в сетку расписания
review.time_limit.before_adding_review=57
#кол-во очков за ревью, на которое никто не записался
review.point_for_empty_review=1
#кол-во очков за ревью, которое успешно проведено
review.point_for_take_review=2
#время в минутах на которое можно задержаться с проведением ревью
review.delay=10
#время в минутах до старта ревью, чтобы начать к нему подготовку, отправить ссылку на hangouts
review.early_start=5
#Ограничение максимального количество проведенных ревью подряд без студентов у одного ревьюера (0 - без ограничений). При превышении пользователю будет заблокирована возможность создавать новые ревью
review.max_reviews_without_students_in_row=3
#Максимальное количество ревью у одного ревьюера в сутки (0 - без ограничений). При превышении пользователю будет заблокирована возможность создавать новые ревью
review.max_reviews_per_day=10
#Максимальное количество открытых ревью у одного ревьюера (0 - без ограничений). При превышении пользователю будет заблокирована возможность создавать новые ревью
review.max_open_reviews=15

#FEEDBACK

#нижняя граница оценки
lower.bound=1
#верхняя граница оценки
upper.bound=10
